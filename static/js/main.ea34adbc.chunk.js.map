{"version":3,"sources":["components/card.js","components/cardList.js","components/searchBox.js","components/scroll.js","components/errorBoundry.js","containers/app.js","index.js"],"names":["Card","props","name","id","email","url","className","src","alt","CardList","cardComponents","users","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","boarder","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","searchField","target","value","robots","fetch","then","response","json","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAwBeA,EAnBF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,GAAIC,EAASH,EAATG,MAIXC,EAAG,+BAA2BF,EAA3B,YAET,OACI,cADK,CACL,OAAKG,UAAU,sDAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAI,UACnB,gCACI,6BAAKN,IACL,4BAAIE,WCMLK,EApBE,SAAC,GAAe,IACvBC,EADsB,EAAZC,MACaC,KAAI,SAACC,EAAMC,GAEpC,OACI,cAAC,EAAD,CAEIX,GAAIU,EAAKV,GACTD,KAAMW,EAAKX,KACXE,MAAOS,EAAKT,OAHPS,EAAKV,OAQtB,OACI,8BACKO,KCFEK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIXI,EAXA,SAACnB,GAEZ,OAGI,aAFA,CAEA,OAAKoB,MAAO,CAACC,UAAW,SAAUC,QAAS,kBAAmBC,OAAQ,SAAtE,SACKvB,EAAMwB,YCaJC,E,kDAnBX,WAAYzB,GAAQ,IAAD,8BACf,gBACK0B,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACJ,4EAEJG,KAAK9B,MAAMwB,a,GAhBCQ,aCoDZC,G,wDA5CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAQ,CACTa,OAAQ,GACRH,YAAa,IAJP,E,gEASO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA/B,GAAK,OAAI,EAAKqB,SAAS,CAACQ,OAAQ7B,S,+BASnC,IAAD,EACwBoB,KAAKJ,MAA5Ba,EADD,EACCA,OAAQH,EADT,EACSA,YACTQ,EACFL,EAAOM,QAAO,SAAAC,GAAK,OAAIA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBACzE,OAAqB,IAAlBR,EAAOU,OACC,4DAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,MAAOkC,e,GAnC3BZ,c,MCFlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.ea34adbc.chunk.js","sourcesContent":["import React from 'react'; //React must be in scope for JSX\r\n\r\n\r\n//const Card = ( {name, id, email} ) => { //This also works\r\n\r\nconst Card = (props) => {\r\n    const {name, id, email} = props; \r\n    // console.log(props); // returns an object with all properties passed to it from the parent caller. \r\n    // console.log(props.user); // gets the user property\r\n\r\n    const url = `https://robohash.org/${id}?200x200`;\r\n\r\n    return ( //you can only return one thing\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={url} alt='Robot'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                {/* <p>{id}</p> */}\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Card; ","import React from 'react'; //required to write jsx syntax \r\nimport Card from './card'\r\n\r\nconst CardList = ( {users} ) => {\r\n    const cardComponents = users.map((user, i) => {\r\n        // if(true) {throw new Error('NOOOOOO!')}; \r\n        return (\r\n            <Card \r\n                key={user.id} \r\n                id={user.id} \r\n                name={user.name} \r\n                email={user.email}\r\n            />\r\n        );\r\n    }); //when you return an array of dom elements, React requries the key prop, which it uses to track changes to each individual dom element in the array in it's virtual dom. \r\n    \r\n    return(\r\n        <div>\r\n            {cardComponents}       \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList; \r\n","import React from 'react'; \r\n\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox; \r\n","import React from 'react'; \r\n\r\n\r\nconst Scroll = (props) => {\r\n    // console.log(props); \r\n    return (\r\n        //CardList is a child of Scroll in the app.js file \r\n        //style: java script expression, returning an object\r\n        <div style={{overflowY: 'scroll', boarder: '5px solid black', height: '800px'}}>\r\n            {props.children} \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll; \r\n","import React, {Component} from 'react'; \r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(); \r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    };\r\n\r\n    compenentDidCatch(error, info) { //another React lifecycle hook\r\n        this.setState({hasError: true}); \r\n    }; \r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops, something isn't quite working here.</h1>\r\n        };\r\n        return this.props.children;  \r\n    };\r\n};\r\n\r\nexport default ErrorBoundry; \r\n","import React, {Component} from 'react'; \r\nimport CardList from '../components/cardList.js'; \r\n// import {robots} from './robots.js' //because this file can export multiple items (it dosen't have export default), you have to destructure the items you want access to. \r\nimport SearchBox from '../components/searchBox.js';\r\nimport Scroll from '../components/scroll.js';\r\nimport ErrorBoundry from '../components/errorBoundry.js'\r\nimport './app.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super(); //calls the constructor function of the Component class\r\n        this.state = {\r\n            robots: [], \r\n            searchField: ''\r\n        }; //the state object should live in the parent component, which will then pass the current state to it's children. \r\n        // console.log('constructor');\r\n    }; \r\n    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}))\r\n        // console.log('componentDidMount');\r\n    }\r\n\r\n    OnSearchChange = (event) => { // with react, whenever you extend a react component with a new custom method, always use arrow functions in order to have the \"this\" key word refer to the react object's properties, not the properties of the method's calling child. \r\n        this.setState({searchField: event.target.value}); \r\n    }; \r\n\r\n    \r\n    render () {\r\n        const {robots, searchField} = this.state; \r\n        const filteredRobots = \r\n            robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\r\n        if(robots.length === 0) {\r\n            return <h1>Loading Your Robot Friends</h1>\r\n        } else {\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.OnSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList users={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        // console.log('render');\r\n    };\r\n};\r\n\r\nexport default App; \r\n","import React from 'react'; \nimport ReactDOM from 'react-dom'; \nimport './index.css';\nimport App from './containers/app';\nimport 'tachyons'; \n\n\nReactDOM.render(\n  <React.StrictMode> \n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}